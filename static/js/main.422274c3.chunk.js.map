{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","getTitle","length","slice","join","addGood","good","setState","removeGood","prevState","filter","item","clearList","this","className","type","onClick","map","isSelectedGood","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,SAAW,WACT,IAAQD,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcE,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUF,EAAc,GAAxB,gBAEF,QACE,MAAM,GAAN,OAAUA,EACPG,MAAM,GAAI,GACVC,KAAK,MAFR,gBAEqBJ,EAClBG,OAAO,GAHV,mB,EAONE,QAAU,SAACC,GACT,IAAQN,EAAkB,EAAKD,MAAvBC,cAER,EAAKO,SAAS,CACZP,cAAc,GAAD,mBAAMA,GAAN,CAAqBM,O,EAItCE,WAAa,SAACF,GACZ,EAAKC,UAAS,SAACE,GACb,MAAO,CACLT,cAAeS,EAAUT,cACtBU,QAAO,SAAAC,GAAI,OAAIL,IAASK,U,EAKjCC,UAAY,WACV,EAAKL,SAAS,CAAEP,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBa,KAAKd,MAAvBC,cAER,OACE,sBAAKc,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,SACGD,KAAKZ,aAGR,wBACEc,KAAK,SACLC,QAASH,KAAKD,UACdE,UAAS,yBAAoBd,EAAcE,OAAS,EAChD,wCACA,kBALN,4BAUA,oBAAIY,UAAU,YAAd,SAEIjB,EAAgBoB,KAAI,SAAAX,GAClB,IAAMY,EAAiBlB,EAAcmB,SAASb,GAE9C,OACE,qBAEEQ,UAAWI,EACP,gCACA,YAJN,UAMGZ,EACD,wBACES,KAAK,SACLC,QACEE,EACI,kBAAM,EAAKV,WAAWF,IACtB,kBAAM,EAAKD,QAAQC,IAEzBQ,UAAU,gBAPZ,SAUII,EACI,SACA,UAlBHZ,e,GAtELc,IAAMC,WAqGTvB,ICtHfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.422274c3.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGoods: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  getTitle = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      default:\n        return `${selectedGoods\n          .slice(0, -1)\n          .join(', ')} and ${selectedGoods\n          .slice(-1)} are selected`;\n    }\n  };\n\n  addGood = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState({\n      selectedGoods: [...selectedGoods, good],\n    });\n  };\n\n  removeGood = (good: string) => {\n    this.setState((prevState) => {\n      return {\n        selectedGoods: prevState.selectedGoods\n          .filter(item => good !== item),\n      };\n    });\n  };\n\n  clearList = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {this.getTitle()}\n        </h1>\n\n        <button\n          type=\"button\"\n          onClick={this.clearList}\n          className={`App__clear-btn ${selectedGoods.length > 0\n            ? 'App__clear-btn App__clear-btn--active'\n            : 'App__clear-btn'}`}\n        >\n          Clear selected\n        </button>\n\n        <ul className=\"App__list\">\n          {\n            goodsFromServer.map(good => {\n              const isSelectedGood = selectedGoods.includes(good);\n\n              return (\n                <li\n                  key={good}\n                  className={isSelectedGood\n                    ? 'App__item App__item--selected'\n                    : 'App__item'}\n                >\n                  {good}\n                  <button\n                    type=\"button\"\n                    onClick={\n                      isSelectedGood\n                        ? () => this.removeGood(good)\n                        : () => this.addGood(good)\n                    }\n                    className=\"App__list-btn\"\n                  >\n                    {\n                      isSelectedGood\n                        ? 'Remove'\n                        : 'Add'\n                    }\n                  </button>\n                </li>\n              );\n            })\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}